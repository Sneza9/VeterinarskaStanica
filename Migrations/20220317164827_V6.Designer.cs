// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace VeterinarskaStanica.Migrations
{
    [DbContext(typeof(VetStanicaContext))]
    [Migration("20220317164827_V6")]
    partial class V6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Pregled", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Mesec")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Pregledi");
                });

            modelBuilder.Entity("Models.TipStruke", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TipoviStruke");
                });

            modelBuilder.Entity("Models.Veterinar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TipStrukeVeterinaraID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipStrukeVeterinaraID");

                    b.ToTable("Veterinari");
                });

            modelBuilder.Entity("Models.Veza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Lek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PregledID")
                        .HasColumnType("int");

                    b.Property<int?>("VeterinarID")
                        .HasColumnType("int");

                    b.Property<int?>("ZivotinjaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PregledID");

                    b.HasIndex("VeterinarID");

                    b.HasIndex("ZivotinjaID");

                    b.ToTable("ZivotinjeVeterinari");
                });

            modelBuilder.Entity("Models.VrstaZivotinje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Vrsta")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("VrsteZivotinja");
                });

            modelBuilder.Entity("Models.Zivotinja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojKartona")
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefonaVlasnika")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ImeVlasnika")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImeZivotinje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VrstaZivotinjeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VrstaZivotinjeID");

                    b.ToTable("Zivotinje");
                });

            modelBuilder.Entity("Models.Veterinar", b =>
                {
                    b.HasOne("Models.TipStruke", "TipStrukeVeterinara")
                        .WithMany("TipVeterinara")
                        .HasForeignKey("TipStrukeVeterinaraID");

                    b.Navigation("TipStrukeVeterinara");
                });

            modelBuilder.Entity("Models.Veza", b =>
                {
                    b.HasOne("Models.Pregled", "Pregled")
                        .WithMany("ZivotinjeVeterinari")
                        .HasForeignKey("PregledID");

                    b.HasOne("Models.Veterinar", "Veterinar")
                        .WithMany("VeterinarZivotinja")
                        .HasForeignKey("VeterinarID");

                    b.HasOne("Models.Zivotinja", "Zivotinja")
                        .WithMany("ZivotinjaVeterinar")
                        .HasForeignKey("ZivotinjaID");

                    b.Navigation("Pregled");

                    b.Navigation("Veterinar");

                    b.Navigation("Zivotinja");
                });

            modelBuilder.Entity("Models.Zivotinja", b =>
                {
                    b.HasOne("Models.VrstaZivotinje", "VrstaZivotinje")
                        .WithMany("VrstaZivotinja")
                        .HasForeignKey("VrstaZivotinjeID");

                    b.Navigation("VrstaZivotinje");
                });

            modelBuilder.Entity("Models.Pregled", b =>
                {
                    b.Navigation("ZivotinjeVeterinari");
                });

            modelBuilder.Entity("Models.TipStruke", b =>
                {
                    b.Navigation("TipVeterinara");
                });

            modelBuilder.Entity("Models.Veterinar", b =>
                {
                    b.Navigation("VeterinarZivotinja");
                });

            modelBuilder.Entity("Models.VrstaZivotinje", b =>
                {
                    b.Navigation("VrstaZivotinja");
                });

            modelBuilder.Entity("Models.Zivotinja", b =>
                {
                    b.Navigation("ZivotinjaVeterinar");
                });
#pragma warning restore 612, 618
        }
    }
}
